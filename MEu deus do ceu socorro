#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define TAM 14
#define COR 6

typedef struct {
	
	int i;
	int j;
	int comando;
	int contador;
	int l;
	int tab[TAM][TAM];
	
} Jogo;

Jogo novoTabuleiro() {
	Jogo a = {0, 0, 0, 0};
	
	srand( (unsigned)time(NULL) );

	for(a.i = 0; a.i < TAM; a.i++) {
		for(a.j = 0; a.j < TAM; a.j++) {
			a.tab[a.i][a.j] = rand() % COR;
		}
	}
	return a;
	
//generates random numbers in the [0,5] interval and sets them to each position in the matrix

}

void imprime (Jogo a) {

	printf("\t\t\t*=*=*=*=*FLOOD IT!*=*=*=*=*\n\n");


	for(a.i = 0; a.i < TAM; a.i++) {
		
		printf("\t\t\t");
		
		for(a.j = 0; a.j < TAM; a.j++) {
			printf("%i ", a.tab[a.i][a.j]);
		}
	printf("\n");
	}
}

//prints each element to the screen and then, when i's value increases, prints a line break to give the matrix its shape



Jogo jogada (Jogo c) {
	
	
	
	printf("\n\t\t\t Digite um valor de 0 a 5\n");
	
	scanf("%i", &c.comando);
	
	//recebe o valor a ser aplicado no elemento do ponto inicial

	if(c.tab[0][0] != c.tab[c.i][c.j]) {
	
	for(c.l = 1; c.l <= TAM; c.l++) {
	
		if(c.tab[0][0] == c.tab[0][c.l]) {
		
			c.tab[0][c.l] = c.comando;
			
		}
	
	}
	
	//testa todos os elementos a direita do ponto inicial
	
	
	
	for(c.l = 1; c.l <= TAM; c.l++) {
	
		if(c.tab[0][0] == c.tab[c.l][0]) {
		
		c.tab[c.l][0] = c.comando;
				
		}
	}
	
	//teste todos os elementos abaixo do ponto inicial
	
	return c;
	
	//retorna a nova matriz
}
	
	c.tab[0][0] = c.comando;
	
	//altera o valor do ponto inicial apos fazer os testes
	
	c.tab[c.i][c.j] = c.tab[c.i+1][c.j+1]
	
	jogada (tabela);
	
	
	
	
		
	
}	
	//testa a linha toda e a coluna toda contanto que a anterior tenha passado no teste

   


int main () {
	
	Jogo tabela = novoTabuleiro();
	
	
	imprime(tabela);
	
	Jogo novo = jogada(tabela);		
		
	imprime(novo);
	
	

	
	return 0;
}
