#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define TAM 14
#define COR 6

typedef struct {
	
	int i;
	int j;
	char comando;
	int tab[TAM][TAM];
	
} Jogo;

Jogo novoTabuleiro() {
	Jogo a = { 0, 0, 0 };
	
	srand( (unsigned)time(NULL) );

	for(a.i = 0; a.i < TAM; a.i++) {
		for(a.j = 0; a.j < TAM; a.j++) {
			a.tab[a.i][a.j] = rand() % COR;
		}
	}
	return a;
	
//generates random numbers in the [0,5] interval and sets them to each position in the matrix

}

void imprime (Jogo a) {

	printf("\t\t\t*=*=*=*=*FLOOD IT!*=*=*=*=*\n\n");


	for(a.i = 0; a.i < TAM; a.i++) {
		
		printf("\t\t\t");
		
		for(a.j = 0; a.j < TAM; a.j++) {
			printf("%i ", a.tab[a.i][a.j]);
		}
	printf("\n");
	}
}

//prints each element to the screen and then, when i's value increases, prints a line break to give the matrix its shape


/*void jogador (Jogo a) {
		
	scanf("\n%c", &a.comando);
	
	int x = 0, y = 0;
	
	if(a.tab[x][y] != a.tab[x-1][y-1]) 	
	
	//testa a linha toda e a coluna toda contanto que a anterior tenha passado no teste
}*/



int main () {
	
	Jogo dados = novoTabuleiro();
	
	/*typedef enum {
		VERMELHO,
		AZUL,
		AMARELO,
		VERDE,
		ROSA,
		ROXO
	};*/
		
	imprime(dados);
	
	printf("\n\t\t\tDigite um nÃºmero de 0 a 5\n");
		
	jogador(dados);
	
	
	return 0;
}
