#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define TAM 14
#define COR 6
#define TENT 10

//TAM corresponds to the size of the matrix, assuming it has the same number of lines and columns
//COR determines the set of values used to populate the matrix, ranging from 0 to COR -1
//TENT measures the number of plays allowed before the game ends


typedef struct {
    
    int i;
	int j;
    int contador;
	int tab[TAM][TAM];
	int comando;
	int *alt;
} Jogo;

Jogo novoTabuleiro() {
	Jogo a = {0, 0, 1};
	
	srand( (unsigned)time(NULL) );

	for(a.i = 0; a.i < TAM; a.i++) {
		for(a.j = 0; a.j < TAM; a.j++) {
			a.tab[a.i][a.j] = rand() % COR;
		}
	}
	return a;
	
//generates random numbers in the [0,5] interval and sets them to each position in the matrix

}

void imprime (Jogo a) {

	printf("\t\t\t*=*=*=*=*FLOOD IT!*=*=*=*=*\n\n");


	for(a.i = 0; a.i < TAM; a.i++) {
		
		printf("\t\t\t");
		
		for(a.j = 0; a.j < TAM; a.j++) {
			printf("%i ", a.tab[a.i][a.j]);
		}
	printf("\n");
	}
}

//prints each element to the screen and then, when i's value increases, prints a line break to give the matrix its shape


Jogo analisar(Jogo a, Jogo b, int i, int j) {
	
    //Problema: a subrotina "lê" os elementos com sucesso mas não altera além dos primeiros;
    
    printf("Analisando agora elemento [%i, %i]\n", i, j);
	
	if(b.tab[i+1][j] == a.tab[i][j]) {
        
        printf("O de baixo é igual\n");
         
        b.tab[i+1][j] = a.comando;
        
        analisar(a, b, i+1, j);
        
    }
    
  
    
   if(b.tab[i][j+1] == a.tab[i][j]) {
	   
	   printf("O da direita é igual\n");		
		
        b.tab[i][j+1] = a.comando;
        
        b.contador++;
        
        analisar(a, b, i, j+1);
        
        
    } 

    
   if(i > 0 && j > 0 && b.tab[i-1][j] == a.tab[i][j]) {
        
         printf("O de cima é igual\n");
       
        b.tab[i-1][j] = a.comando;
               
        analisar(a, b, i-1, j);
        
    }
    
	
    
    if(i > 0 && j > 0 && b.tab[i][j-1] == a.tab[i][j]) {
        
         printf("O da esquerda é igual\n");
        
        b.tab[i][j-1] = a.comando;
        
        analisar(a, b, i, j-1);
        
    } 
	
	if (b.tab[i-1][j] != a.tab[i][j] && b.tab[i][j-1] != a.tab[i][j] && b.tab[i+1][j] != a.tab[i][j] && b.tab[i][j+1] != a.tab[i][j]) {
      
    return b;
    
	}
}

void jogada (Jogo a, Jogo b) {
	
    //Ideia: comparar os elementos em base com os em copia para alterar o tabuleiro sem medo
    
	
	printf("\n\t\t\t Digite um valor de 0 a 5\n\n\n");
	
	scanf("%i", &a.comando);
	
	//recebe o valor a ser aplicado no elemento do ponto inicial (armazena no registro base por praticidade, mas poderia ser armazenado na copia sem problemas)
	
    b.tab[0][0] = a.comando;
    
    //altera o primeiro elemento de acordo com o input
    
    b.i = 0;
    b.j = 0;    

    Jogo mod = analisar(a, b, b.i, b.j);
   
   //passa a versão modificada para um registro novo, que vai servir como base para a próxima alteração
    
   imprime(mod);
    
    b = mod;    
    
    jogada(mod, b);
	
}	


   


int main () {
	
	Jogo base = novoTabuleiro();
	
	
	imprime(base);
    
    Jogo copia = base;
    
    
    copia.contador = 1;
    
    jogada(base, copia);

	
	return 0;
}
